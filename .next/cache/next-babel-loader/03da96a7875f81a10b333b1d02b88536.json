{"ast":null,"code":"var _jsxFileName = \"/home/muttaki/sdfsa/components/Repos.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Octicon, { Repo, Star, RepoForked, TriangleDown } from '@primer/octicons-react';\nimport FlipMove from 'react-flip-move';\nimport { langColors } from '../utils';\nimport ReposStyles from './styles/ReposStyles';\nimport DropdownStyles from './styles/DropdownStyles';\nimport { Section } from '../style';\n\nvar Repos = function Repos(_ref) {\n  var repoData = _ref.repoData;\n\n  var _useState = useState([]),\n      topRepos = _useState[0],\n      setTopRepos = _useState[1];\n\n  var _useState2 = useState('stars'),\n      sortType = _useState2[0],\n      setSortType = _useState2[1];\n\n  var _useState3 = useState(false),\n      dropdownOpen = _useState3[0],\n      setDropdownOpen = _useState3[1];\n\n  var getTopRepos = function getTopRepos(type) {\n    var LIMIT = 8;\n    var map = {\n      stars: 'stargazers_count',\n      forks: 'forks_count',\n      size: 'size'\n    };\n    var sortProperty = map[type];\n    var sorted = repoData.filter(function (repo) {\n      return !repo.fork;\n    }).sort(function (a, b) {\n      return b[sortProperty] - a[sortProperty];\n    }).slice(0, LIMIT);\n    setTopRepos(sorted);\n  };\n\n  useEffect(function () {\n    if (repoData.length) {\n      getTopRepos();\n    }\n  }, []);\n  useEffect(function () {\n    return getTopRepos(sortType);\n  }, [sortType]);\n\n  var toggleDropdown = function toggleDropdown() {\n    return setDropdownOpen(!dropdownOpen);\n  };\n\n  var changeRepoSort = function changeRepoSort(sortType) {\n    setSortType(sortType);\n    toggleDropdown();\n  };\n\n  var sortTypes = ['stars', 'forks', 'size'];\n  return __jsx(Section, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, __jsx(ReposStyles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Top Repos\"), __jsx(\"div\", {\n    className: \"dropdown-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"by\"), __jsx(DropdownStyles, {\n    active: dropdownOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    className: \"dropdown__button\",\n    onClick: function onClick() {\n      return toggleDropdown();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, sortType), __jsx(Octicon, {\n    icon: TriangleDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), __jsx(\"ul\", {\n    className: \"dropdown__list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, sortTypes.map(function (type, i) {\n    return __jsx(\"li\", {\n      className: \"dropdown__list-item\",\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return changeRepoSort(type);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, type));\n  }))))), __jsx(\"div\", {\n    className: \"repo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, topRepos.length > 0 ? __jsx(FlipMove, {\n    typeName: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, topRepos.map(function (repo) {\n    return __jsx(\"li\", {\n      key: repo.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      href: repo.html_url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"repo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"repo__top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"repo__name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(Octicon, {\n      icon: Repo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, repo.name)), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, repo.description)), __jsx(\"div\", {\n      className: \"repo__stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"repo__stats--left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"language\",\n      style: {\n        backgroundColor: langColors[repo.language]\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), repo.language), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Octicon, {\n      icon: Star,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), repo.stargazers_count.toLocaleString()), __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(Octicon, {\n      icon: RepoForked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), repo.forks.toLocaleString())), __jsx(\"div\", {\n      className: \"repo__stats--right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, repo.size.toLocaleString(), \" KB\")))));\n  })) : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"No available repositories!\"))));\n};\n\nRepos.propTypes = {\n  repoData: PropTypes.array.isRequired\n};\nexport default Repos;","map":{"version":3,"sources":["/home/muttaki/sdfsa/components/Repos.js"],"names":["React","useState","useEffect","PropTypes","Octicon","Repo","Star","RepoForked","TriangleDown","FlipMove","langColors","ReposStyles","DropdownStyles","Section","Repos","repoData","topRepos","setTopRepos","sortType","setSortType","dropdownOpen","setDropdownOpen","getTopRepos","type","LIMIT","map","stars","forks","size","sortProperty","sorted","filter","repo","fork","sort","a","b","slice","length","toggleDropdown","changeRepoSort","sortTypes","i","id","html_url","name","description","backgroundColor","language","stargazers_count","toLocaleString","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Octicon, { Repo, Star, RepoForked, TriangleDown } from '@primer/octicons-react';\nimport FlipMove from 'react-flip-move';\nimport { langColors } from '../utils';\nimport ReposStyles from './styles/ReposStyles';\nimport DropdownStyles from './styles/DropdownStyles';\nimport { Section } from '../style';\n\nconst Repos = ({ repoData }) => {\n  const [topRepos, setTopRepos] = useState([]);\n  const [sortType, setSortType] = useState('stars');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n\n  const getTopRepos = type => {\n    const LIMIT = 8;\n    const map = {\n      stars: 'stargazers_count',\n      forks: 'forks_count',\n      size: 'size',\n    };\n    const sortProperty = map[type];\n    const sorted = repoData\n      .filter(repo => !repo.fork)\n      .sort((a, b) => b[sortProperty] - a[sortProperty])\n      .slice(0, LIMIT);\n\n    setTopRepos(sorted);\n  };\n\n  useEffect(() => {\n    if (repoData.length) {\n      getTopRepos();\n    }\n  }, []);\n\n  useEffect(() => getTopRepos(sortType), [sortType]);\n\n  const toggleDropdown = () => setDropdownOpen(!dropdownOpen);\n\n  const changeRepoSort = sortType => {\n    setSortType(sortType);\n    toggleDropdown();\n  };\n\n  const sortTypes = ['stars', 'forks', 'size'];\n\n  return (\n    <Section>\n      <ReposStyles>\n        <header>\n          <h2>Top Repos</h2>\n          <div className=\"dropdown-wrapper\">\n            <span className=\"label\">by</span>\n            <DropdownStyles active={dropdownOpen}>\n              <button className=\"dropdown__button\" onClick={() => toggleDropdown()}>\n                <label>{sortType}</label>\n                <Octicon icon={TriangleDown} />\n              </button>\n              <ul className=\"dropdown__list\">\n                {sortTypes.map((type, i) => (\n                  <li className=\"dropdown__list-item\" key={i}>\n                    <button onClick={() => changeRepoSort(type)}>{type}</button>\n                  </li>\n                ))}\n              </ul>\n            </DropdownStyles>\n          </div>\n        </header>\n\n        <div className=\"repo-list\">\n          {topRepos.length > 0 ? (\n            <FlipMove typeName=\"ul\">\n              {topRepos.map(repo => (\n                <li key={repo.id}>\n                  <a\n                    href={repo.html_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"repo\">\n                    <div className=\"repo__top\">\n                      <div className=\"repo__name\">\n                        <Octicon icon={Repo} />\n                        <h3>{repo.name}</h3>\n                      </div>\n                      <p>{repo.description}</p>\n                    </div>\n                    <div className=\"repo__stats\">\n                      <div className=\"repo__stats--left\">\n                        <span>\n                          <div\n                            className=\"language\"\n                            style={{ backgroundColor: langColors[repo.language] }}\n                          />\n                          {repo.language}\n                        </span>\n                        <span>\n                          <Octicon icon={Star} />\n                          {repo.stargazers_count.toLocaleString()}\n                        </span>\n                        <span>\n                          <Octicon icon={RepoForked} />\n                          {repo.forks.toLocaleString()}\n                        </span>\n                      </div>\n                      <div className=\"repo__stats--right\">\n                        <span>{repo.size.toLocaleString()} KB</span>\n                      </div>\n                    </div>\n                  </a>\n                </li>\n              ))}\n            </FlipMove>\n          ) : (\n            <p>No available repositories!</p>\n          )}\n        </div>\n      </ReposStyles>\n    </Section>\n  );\n};\n\nRepos.propTypes = {\n  repoData: PropTypes.array.isRequired,\n};\n\nexport default Repos;\n"]},"metadata":{},"sourceType":"module"}