{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    @media (max-width: \", \"em) {\\n      \", \";\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { css } from 'styled-components';\nvar sizes = {\n  bp900: 900,\n  bp600: 600,\n  bp400: 400\n}; // iterate through the sizes and create a media template\n\nexport var media = Object.keys(sizes).reduce(function (accumulator, label) {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  var emSize = sizes[label] / 16;\n\n  accumulator[label] = function () {\n    return css(_templateObject(), emSize, css.apply(void 0, arguments));\n  };\n\n  return accumulator;\n}, {});\nexport default media;","map":{"version":3,"sources":["/home/muttaki/sdfsa/style/media.js"],"names":["css","sizes","bp900","bp600","bp400","media","Object","keys","reduce","accumulator","label","emSize"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,mBAApB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAE,GADK;AAEZC,EAAAA,KAAK,EAAE,GAFK;AAGZC,EAAAA,KAAK,EAAE;AAHK,CAAd,C,CAMA;;AACA,OAAO,IAAMC,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,MAAnB,CAA0B,UAACC,WAAD,EAAcC,KAAd,EAAwB;AACrE;AACA;AACA,MAAMC,MAAM,GAAGV,KAAK,CAACS,KAAD,CAAL,GAAe,EAA9B;;AACAD,EAAAA,WAAW,CAACC,KAAD,CAAX,GAAqB;AAAA,WAAaV,GAAb,oBACEW,MADF,EAEfX,GAAG,MAAH,mBAFe;AAAA,GAArB;;AAKA,SAAOS,WAAP;AACD,CAVoB,EAUlB,EAVkB,CAAd;AAYP,eAAeJ,KAAf","sourcesContent":["import { css } from 'styled-components';\n\nconst sizes = {\n  bp900: 900,\n  bp600: 600,\n  bp400: 400,\n};\n\n// iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((accumulator, label) => {\n  // use em in breakpoints to work properly cross-browser and support users\n  // changing their browsers font-size: https://zellwk.com/blog/media-query-units/\n  const emSize = sizes[label] / 16;\n  accumulator[label] = (...args) => css`\n    @media (max-width: ${emSize}em) {\n      ${css(...args)};\n    }\n  `;\n  return accumulator;\n}, {});\n\nexport default media;\n"]},"metadata":{},"sourceType":"module"}